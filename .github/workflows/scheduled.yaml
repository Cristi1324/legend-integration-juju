name: Refresh EKS FINOS Legend deployment

on:
  workflow_dispatch:
  schedule:
    # Runs everyday at 00:00. (see https://crontab.guru)
    - cron: '0 0 * * *'

jobs:
  build:
    name: Trigger Juju refresh on EKS Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Installing Dependencies
        run: |
          sudo snap install juju --classic

      - name: Install Docker
        uses: docker-practice/actions-setup-docker@master

      # We need the kubeconfig and the controllers.yaml file into our environment
      # in order to login and refresh the charms.
      - name: Adding Credentials
        shell: bash
        run: |
          mkdir -p ~/.kube
          mkdir -p ~/.local/share/juju
          echo "${KUBECONFIG_B64}" | base64 -d > ~/.kube/config
          echo "${CONTROLLERS_B64}" | base64 -d > ~/.local/share/juju/controllers.yaml

          echo "${CONTROLLER_PASSWORD}" | juju login -c finos-legend -u admin
        
        env:
          KUBECONFIG_B64: "${{ secrets.KUBECONFIG_B64 }}"
          CONTROLLERS_B64: "${{ secrets.CONTROLLERS_B64 }}"
          CONTROLLER_PASSWORD: "${{ secrets.CONTROLLER_PASSWORD }}"
          
      - name: Refreshing Charms
        run: |
          
          # Controller and model names are the same, "finos-legend"
          juju switch finos-legend:finos-legend
          
          # Running juju status will show us the current revisions of the charms.
          juju status
          
          # Upgrade controller model
          # juju upgrade-controller -c finos-legend

          # Upgrade the current model
          # juju upgrade-model

          set -x

          update-images() {
            charm_name=$1 
            resource_name=$2
            application_name=$3

            download_url=$(curl -sL https://api.charmhub.io/v2/charms/resources/$charm_name/$resource_name/revisions |  jq 'map( .[-1].download.url)'[0] | tr -d '"')
            curl -sLo ${resource_name}_download.oci $download_url
            ls
            sha256sum ${resource_name}_download.oci
            juju attach-resource $application_name $resource_name=${resource_name}_download.oci

          #	charmhub_timestamp=$(curl -sL https://api.charmhub.io/v2/charms/resources/$charm_name/$resource_name/revisions |  jq 'map( .[-1]."created-at")'[0] | tr -d '"')
          #	local_timestamp=$(juju resources $application_name --format=json | jq 'map( .[0].timestamp)'[0] | tr -d '"')

          #	charmhub_timestamp_ut=$(date -d ${charmhub_timestamp} +%s)
          #	local_timestamp_ut=$(date -d ${local_timestamp} +%s)


          #	if [ $charmhub_timestamp_ut -ge $local_timestamp_ut ];
          #		then 
          #			download_url=$(curl -sL https://api.charmhub.io/v2/charms/resources/$charm_name/$resource_name/revisions |  jq 'map( .[-1].download.url)'[0] | tr -d '"')
          #			curl -sLo $resource_name_download $download_url
          #			juju attach-resource $application_name $resource_name=$resource_name_download
          #		else
          #			echo "Already running the latest image."
          #	fi

          }
          
          update-images finos-legend-engine-k8s engine-image legend-engine 
          update-images finos-legend-sdlc-k8s sdlc-image legend-sdlc 
          update-images finos-legend-studio-k8s studio-image legend-studio 
        
          # Updates the charm code if available
          juju refresh legend-engine --channel="latest/edge"
          juju refresh legend-sdlc --channel="latest/edge"
          juju refresh legend-studio --channel="latest/edge"
                  
          # Running juju status will show us the current revisions of the charms.
          juju status
